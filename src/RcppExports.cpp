// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// GetBinaryDosageInformation
Rcpp::List GetBinaryDosageInformation(const std::string& binaryDosageFilename, const unsigned int nSub, const unsigned int nSNPs);
RcppExport SEXP _GxEScanR_GetBinaryDosageInformation(SEXP binaryDosageFilenameSEXP, SEXP nSubSEXP, SEXP nSNPsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type binaryDosageFilename(binaryDosageFilenameSEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type nSub(nSubSEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type nSNPs(nSNPsSEXP);
    rcpp_result_gen = Rcpp::wrap(GetBinaryDosageInformation(binaryDosageFilename, nSub, nSNPs));
    return rcpp_result_gen;
END_RCPP
}
// GxEScanC
int GxEScanC(Rcpp::List subjectData, Rcpp::List geneticInfo);
RcppExport SEXP _GxEScanR_GxEScanC(SEXP subjectDataSEXP, SEXP geneticInfoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type subjectData(subjectDataSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type geneticInfo(geneticInfoSEXP);
    rcpp_result_gen = Rcpp::wrap(GxEScanC(subjectData, geneticInfo));
    return rcpp_result_gen;
END_RCPP
}
// GxETest
int GxETest();
RcppExport SEXP _GxEScanR_GxETest() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(GxETest());
    return rcpp_result_gen;
END_RCPP
}
// PlinkBinaryInfo
Rcpp::List PlinkBinaryInfo(std::string& geneticFile, std::string& mapFile, std::string& familyFile);
RcppExport SEXP _GxEScanR_PlinkBinaryInfo(SEXP geneticFileSEXP, SEXP mapFileSEXP, SEXP familyFileSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string& >::type geneticFile(geneticFileSEXP);
    Rcpp::traits::input_parameter< std::string& >::type mapFile(mapFileSEXP);
    Rcpp::traits::input_parameter< std::string& >::type familyFile(familyFileSEXP);
    rcpp_result_gen = Rcpp::wrap(PlinkBinaryInfo(geneticFile, mapFile, familyFile));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_GxEScanR_GetBinaryDosageInformation", (DL_FUNC) &_GxEScanR_GetBinaryDosageInformation, 3},
    {"_GxEScanR_GxEScanC", (DL_FUNC) &_GxEScanR_GxEScanC, 2},
    {"_GxEScanR_GxETest", (DL_FUNC) &_GxEScanR_GxETest, 0},
    {"_GxEScanR_PlinkBinaryInfo", (DL_FUNC) &_GxEScanR_PlinkBinaryInfo, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_GxEScanR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
